name: CI build & push (todolist-app)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write   # สำหรับสร้าง/อัปเดต git tag
  packages: write

# กัน workflow ซ้อนชนกัน
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # ----------------------------------------------------------
  # 1) คำนวณเวอร์ชันใหม่ (เฉพาะ push -> main) และสร้าง git tag
  #    ผลลัพธ์: outputs.version_tag = 1.0.x
  # ----------------------------------------------------------
  bump_tag:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.bump.outputs.VERSION_TAG }}
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags --force

      - name: Compute next patch & push tag (once)
        id: bump
        shell: bash
        run: |
          set -euo pipefail

          # อ่าน tag ล่าสุดจาก remote; ถ้าไม่มีให้เริ่มที่ v1.0.0
          LAST_TAG="$(git describe --tags --abbrev=0 2>/dev/null || echo 'v1.0.0')"
          CLEAN_LAST="${LAST_TAG#v}"

          IFS='.' read -r MAJ MIN PAT <<< "$CLEAN_LAST"
          NEXT="v${MAJ}.${MIN}.$((PAT+1))"

          # กันกรณี rerun แล้ว tag มีอยู่แล้ว
          while git rev-parse -q --verify "refs/tags/${NEXT}" >/dev/null; do
            IFS='.' read -r MAJ MIN PAT <<< "${NEXT#v}"
            NEXT="v${MAJ}.${MIN}.$((PAT+1))"
          done

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git tag -a "$NEXT" -m "ci: release ${NEXT}"
          git push origin "$NEXT"

          # ส่งออกเฉพาะตัวเลข 1.0.x (ไม่มี v นำหน้า)
          echo "VERSION_TAG=${NEXT#v}" >> "$GITHUB_OUTPUT"

  # ----------------------------------------------------------
  # 2) Build & Push images (เฉพาะ push main)
  #    - ใช้เวอร์ชันจาก bump_tag
  #    - ติด '1.0.x' เพียงแท็กเดียว
  #    - ใช้เฉพาะ repos: front-test-1/my-app และ front-test-1/tasks-api
  # ----------------------------------------------------------
  build-and-push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [bump_tag]
    strategy:
      matrix:
        include:
          - name: my-app
            context: ./my-app               # ปรับตามโครงสร้างจริง
            image: registry.nipa.cloud/front-test-1/my-app
          - name: tasks-api
            context: ./tasks-api            # ถ้าโฟลเดอร์คุณชื่อ ./api ให้เปลี่ยนเป็น ./api
            image: registry.nipa.cloud/front-test-1/tasks-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set VERSION_TAG (from bump_tag)
        run: echo "VERSION_TAG=${{ needs.bump_tag.outputs.version_tag }}" >> "$GITHUB_ENV"

      - name: Login to Nipa Registry
        uses: docker/login-action@v3
        with:
          registry: registry.nipa.cloud
          username: ${{ secrets.NIPA_REGISTRY_USERNAME }}
          password: ${{ secrets.NIPA_REGISTRY_PASSWORD }}

      # ตั้งให้มี "แท็กเดียว" คือ 1.0.x
      - name: Extract metadata (single tag only)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=${{ env.VERSION_TAG }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (${{ matrix.name }})
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ----------------------------------------------------------
  # 3) Build (no push) สำหรับ PR — ไม่มีการสร้างแท็ก/พุชภาพ
  # ----------------------------------------------------------
  pr-build-only:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: my-app
            context: ./my-app
          - name: tasks-api
            context: ./tasks-api          # ถ้าโฟลเดอร์คุณคือ ./api ให้แก้เป็น ./api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build only (${{ matrix.name }}) - no push, no tags
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: false
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
