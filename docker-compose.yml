version: "3.9"

services:
  web:
    image: ${REGISTRY}/my-app:${WEB_TAG}
    env_file:
      - ./my-app/.env
    environment:
      # ฝั่งเบราว์เซอร์เรียก API เครื่องคุณเอง
      NEXT_PUBLIC_API_BASE_URL: http://host.docker.internal:5000
      NODE_ENV: production
    ports:
      - "4000:3000" # กันชน dev ที่ใช้ :3000 บน host
    depends_on: []  # ไม่ผูกกับ api

  # เปิดเฉพาะเมื่ออยากรัน API ในคอนเทนเนอร์ (ปกติจะไม่เปิด)
  api:
    image: ${REGISTRY}/tasks-api:${API_TAG}
    env_file:
      - ./api/.env
    environment:
      PORT: "5000"
      DB_HOST: "mysql"
      DB_PORT: "3306"
    ports:
      - "5001:5000"  
    depends_on:
      - mysql

  # ถ้าจะใช้ MySQL ในคอนเทนเนอร์ และ API นอกรันที่ 127.0.0.1 ต้อง publish พอร์ต
  #อันนี้คือMysql ในdocker containerไม่ใช่บนwindowเพราะฉนั้นใช้port 3306ไม่ได้จะชนกัน
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
    ports:
      - "3307:3306"   # เปลี่ยนhost-portเป็น 3307
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:
